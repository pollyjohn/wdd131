       <link rel="stylesheet" type="text/css" href="./styles/media-query-large.css" >
 
        <link rel="stylesheet" type="text/css" href="./styles/media-query.css">

 
body max-width: ; 
 
.active {
        background-color: aquamarine;
    }
 
       <link rel="stylesheet" type="text/css" href="./styles/media-query-large.css" > 

 
edia="screen and (max-width: 599px)
 
display: grid;
        grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
        grid-gap: 2rem;
 
right: 30%;
 
grid-column: 2/4;
 
margin
 
header{
        }
 
        grid-gap: 2rem;

 
.temples img {
       row-gap: 50px; 
    }


 
width: 90%;
        height: auto;
        overflow: hidden;
        background-color: #eeea11;
        text-align: center;
        display: flex;
        
 
    
.temples {
    size: 150%;
}  
 
   .column {
        grid-template-columns: 1fr 1fr  ;
 
    .column1 {
        display:inline-block;
        grid-column: 1/2;
             
            
    /* Adjust the width as needed */
    }
    
    .column2 {
        display:block;
        grid-column: 2/3;
        grid-row: 1/6;
        
    /* Adjust the width as needed */
    }
    
 
nav {
    background-color: rgb(14, 10, 226);

    color: #000;

    display:block;
    font-size: 2rem;
    font-weight: 700;
    text-decoration: none;
    padding: 0.5rem 0.75rem;
    background-color: #53d309;
    color: #000;
}

.navigation {
    list-style:none;
    margin: 0 auto;    
}

.navigation li {
display: inline-block;
}

.navigation a {
    display: block;
    padding: 0.75rem;
    text-align: left;
    color: black;
    font-weight: 700;
    transition: 0.5s;
    font-size: clamp(1rem, 2vmin, 1.5rem);
}
.navigation a:hover, .navigation a:active { color: rgb(146, 29, 29);
background-color: black;}






header{
    }

main { display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 2rem;	
}

.temples {
    display: grid;

    padding: 1rem;
    background-color: #cf0808;
    
}
    

.temples img {
    width: 100%;
    height: auto;
    overflow: hidden;
    background-color: #eeea11;
    text-align: center;
    display: flex;
}



.row  {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr 1fr; 
}

.column1 {
    display:inline-block;
    grid-column: 1/2;
         
        
/* Adjust the width as needed */
}

.column2 {
    display:block;
    grid-column: 2/3;
    grid-row: 1/6;
    
/* Adjust the width as needed */
}


footer {
    margin: 0 auto;}


    footer {
        grid-column: 2 / 4;
        text-align: center;
        background-color: rgb(4, 138, 15);
    
    }
    
    footer span, p {
        color: black;
    }
    
    footer 
        {
            margin: 0 auto;
            display: grid;
            
        }

main, header, footer {
    margin: 1rem auto;
    border: 1px solid #d41414;
    padding:  1rem;
    background-color: #2d12f7;
    color: black;
}

.active {
    background-color: aquamarine;
}
 
    grid-row: 1/6;

 
block
 
grid-template-columns: 1fr 1fr;
    
 
grid-template-rows: 1fr 1fr 1fr 1fr 1fr;
 
    justify-content: space-evenly;

 
    flex-wrap: wrap;

 
    grid-row: 1/5;

 
    flex-wrap: wrap;

 
    flex-wrap: wrap;

 
grid-column: 3/5;
/* Adjust the width as needed */
}
 
grid-column: 2/4;
 
grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr 1fr;
 
grid-template-columns: 1fr 1fr 1fr 1fr;
 
grid-column: 1/4;
 
block
 
    display: none;
 
    text-decoration: none;

 
#menu {
    display:block;
    font-size: 2rem;
    font-weight: 700;
    text-decoration: none;
    padding: 0.5rem 0.75rem;
    background-color: #53d309;
    color: #000;
}
 

#menu {
    display:block;
    font-size: 2rem;
    font-weight: 700;
    text-decoration: none;
    padding: 0.5rem 0.75rem;
    background-color: #53d309;
    color: #000;
} 
 
grid-template-columns:  1fr 1fr ;
    grid-template-rows: 1fr auto 1fr;
    margin: 0 auto;
 
block
 
#menu.show::before {
    content: "X";
 
.show li {
    display: block;

}
 
#menu::before {
    content: "≡";
}
 
body {
    display: grid;
    grid-template-columns: 1fr;
}
 
.row  {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
}

.column {
    display:grid;
         flex: 100%;
         grid-column: 2/4;
/* Adjust the width as needed */
}
 
grid-template-columns:  1fr 1fr ;
    
    margin: 0 auto;}

 
block
 
         flex: 100%;

 
 flex-wrap: wrap;
 
 
display: flex;
   
 
flex: 100%;
 
640px
 
max-width: 750px
 
    max-width: 640px;

 
display:grid;
 
    flex-wrap: wrap;
 
    display: flex;

 
ax-width: 750px
 
        <link rel="stylesheet"  type="text/css" href="./styles/media-query.css" media="screen and (max-width: 599px)">
        <link rel="stylesheet" type="text/css" href="./styles/media-query-large.css" media="screen and (min-width: 600px)">

 
 -->
 
/
 
        <meta name="viewport" content="width=device-width, initial-scale=1.0">

 
grid-template-rows: 1fr 1fr ;
 
1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr
 
1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr
 
grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr1fr 1fr 1fr 1fr;
 
uto
 
auto 1fr
 
1fr auto
 

body {
    display: grid;
}
 
    max-width: 760px;

 
@media (max-width: 540px) {
	nav ul {
		display: flex;
	}

	nav ul li {
		flex: 1 0 auto; /* flex: [flex-grow] [flex-shrink] [flex-basis]; 
		in this example, the items will not shrink but can grow to fill the space at natural content width*/

}}


@media (max-width: 840px) {
	nav ul {
		display: flex;
	}

	nav ul li {
		flex: 1 0 auto; /* flex: [flex-grow] [flex-shrink] [flex-basis]; 
		in this example, the items will not shrink but can grow to fill the space at natural content width*/

}}
 
display: grid;
    width: 90%;
    background: #ffffff;
    gap: 16px;
    grid-template-columns: auto 2fr auto;
	grid-gap: 7px;
 
display: grid;
    width: 90%;
    background: #ffffff;
    gap: 16px;
    grid-template-columns: auto 2fr auto;
	grid-gap: 7px;
 
max-width: 750px;
    margin: 0 auto;
    display: grid;

 
750
 
    display: grid;

 
    grid-template-columns: auto 2fr auto;
	grid-gap: 7px;
 
    display: grid;
    width: 90%;
 

.row  {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
}

.column {
    display:grid;
         flex: 100%;
         grid-column: 1/3;
/* Adjust the width as needed */
}
 
width: 10
 
    grid-column: 1/3;
 
.row  {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
}

.column {
    display:grid;
         flex: 100%;
         grid-column: 1/3;
/* Adjust the width as needed */
}
 
@media (max-width: 540px) {
	nav ul {
		display: flex;
	}

	nav ul li {
		flex: 1 0 auto; /* flex: [flex-grow] [flex-shrink] [flex-basis]; 
		in this example, the items will not shrink but can grow to fill the space at natural content width*/

}}


@media (max-width: 840px) {
	nav ul {
		display: flex;
	}

	nav ul li {
		flex: 1 0 auto; /* flex: [flex-grow] [flex-shrink] [flex-basis]; 
		in this example, the items will not shrink but can grow to fill the space at natural content width*/

}}

 
		in this example, the items will not shrink but can grow to fill the space at natural content width*/

}}


@media (max-width: 840px) {
	nav ul {
		display: flex;
	}

	nav ul li {
		flex: 1 0 auto; /* flex: [flex-grow] [flex-shrink] [flex-basis]; 
		in this example, the items will not shrink but can grow to fill the space at natural content width*/

}}
 
 grid-template-columns: 1fr 1fr;
        grid-gap: 1rem;
 
grid-gap: 1rem;
 
	nav ul {
		display: flex;
	}

	nav ul li {
		flex: 1 0 auto; /* flex: [flex-grow] [flex-shrink] [flex-basis]; 
		in this example, the items will not shrink but can grow to fill the space at natural content width*/

}}


@media (max-width: 840px) {
	nav ul {
		display: flex;
	}

	nav ul li {
		flex: 1 0 auto; /* flex: [flex-grow] [flex-shrink] [flex-basis]; 
		in this example, the items will not shrink but can grow to fill the space at natural content width*/

}}
 
-large
 
@media (max-width: 540px) {

}}

 
	nav ul {
		display: flex;
	}

	nav ul li {
		flex: 1 0 auto; /* flex: [flex-grow] [flex-shrink] [flex-basis]; 
		in this example, the items will not shrink but can grow to fill the space at natural content width*/
 
background-color:black
 
class="navigation"
 
        padding: 2rem;

 
1fr 1fr 1fr 1fr 1fr 1fr
 
grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
	grid-gap: 7px;
 
idth: 100%
 
    position: absolute;

 
    display: grid;
	grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
	grid-gap: 7px;
 
position: absolute;
}
 
-color
 
grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
 
{
    
}
 
    display: block;

 
grid-column: 3/5;
 
pic
 
main {max-width: 540px;
margin: 0 auto;}
 
<header>

        </header>
        
 
<head>
 
lang="en-US"
 
Pyspark
 
Google cloud
 
AWS
 
project
 
Brazilia labor market DATA project
 
https://www.dremio.com/
 
width:max-content;
 
max-width: 700px;
 

const formatter = new Intl.DateTimeFormat("en-US", {
  year: "numeric",
  month: "long",
  day: "numeric",
  hour: "numeric",
  minute: "numeric",
  second: "numeric"
});
 
lastModifiedElement.innerHTML = `<span class="lastModified">Last Modified: ${parsedDateTime}</span>`;
 
// Exibe a data formatada no seu elemento HTML
 
// Formata a data e a hora usando o formatador
const parsedDateTime = formatter.format(today);
 
// Cria um formatador de data
 
// Seleciona o elemento que vai exibir a data de última modificação


// Cria um novo objeto Date para a data e hora atuais
const today = new Date();

 
const lastModifiedElement = document.getElementById("lastModified");
 
const formatter = new Intl.DateTimeFormat("en-US" , {
    year: "numeric",
    month: "long",
    day: "numeric",
    hour: "numeric",
    minute: "mumeric",
    second: "numeric"
});
 
lasmodified.innerHTML = `<span class="lastmodified">${today.getDate(), today.getTime}</span>`

 
const lastModified = document.getElementById("#lastModified")
 
class="lastModified"
 
class="copyright"
 
contenteditable=
 
contenteditable
 
id="lastModified"
 
Intl.DateTimeFormat("en-US")
 
Intl.DateTimeFormat(en-US)
 
const year = document.querySelector("#currentyear")

 
©
 
getFullYear(): 
 
double
 
double
 
dotted
 
@import url('https://fonts.googleapis.com/css2?family=Secular+One&family=Shantell+Sans&display=swap');

 
</section>
 
</section>    
 
height: 2rem;
 
border: 1rem;
 
header { 
    width: auto;
    height: 5rem;
}
 
wdd 131: Dynamic web fundamentas -
 
<span>João Paulo Pires</span>
 
 find 
 
some 
 
text-align: center;    
    
 
align-content:space-evenly ;
 
align-items: center; 
 
/* Para centralizar horizontalmente */
 
/* Isto é crucial para empilhar itens verticalmente */
 
/* Substitua por seletor real */
 
div-pai-da-
 
</div>
 
 float:inline-end;
 
span
 
lue
 
yellow
 
color: yellow;
 
color: aliceblue;
 
background-color: blue;
 
right-side
 
align-items:flex-end;
 
flex-flow:column;
 
flex-flow: wrap;
 
/home/joaopaulo/Documents/pathway/web/wdd131/images
 
contenteditable
 
Brasília - Brazil
 
<span>💻🎲</span>
 
💻🎲
 
<data value=""></data>
 
main {
    grid-column: 1 / 3;
    background-color: coral;
    border-radius: 2%;
    margin: 1%;
    
}
 
grid-column: 1 / 3;
    background-color: coral;
 
background-color: coral;
 
grid-column: 1 / 3;
 
João Paulo Pires
 
 margin-top: ;

 
